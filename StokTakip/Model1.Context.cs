//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StokTakip
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class StokTakipEntities : DbContext
    {
        public StokTakipEntities()
            : base("name=StokTakipEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Kullanici> Kullanicis { get; set; }
        public virtual DbSet<Satislar> Satislars { get; set; }
        public virtual DbSet<Urunler> Urunlers { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Ara_Result> Ara(string urunAdi)
        {
            var urunAdiParameter = urunAdi != null ?
                new ObjectParameter("UrunAdi", urunAdi) :
                new ObjectParameter("UrunAdi", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ara_Result>("Ara", urunAdiParameter);
        }
    
        public virtual ObjectResult<Ara1_Result> Ara1(Nullable<int> tC)
        {
            var tCParameter = tC.HasValue ?
                new ObjectParameter("TC", tC) :
                new ObjectParameter("TC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ara1_Result>("Ara1", tCParameter);
        }
    
        public virtual int Ekle(string kategori, string marka, string urunAdi, Nullable<int> miktar, Nullable<int> alisFiyati, Nullable<int> satisFiyati)
        {
            var kategoriParameter = kategori != null ?
                new ObjectParameter("Kategori", kategori) :
                new ObjectParameter("Kategori", typeof(string));
    
            var markaParameter = marka != null ?
                new ObjectParameter("Marka", marka) :
                new ObjectParameter("Marka", typeof(string));
    
            var urunAdiParameter = urunAdi != null ?
                new ObjectParameter("UrunAdi", urunAdi) :
                new ObjectParameter("UrunAdi", typeof(string));
    
            var miktarParameter = miktar.HasValue ?
                new ObjectParameter("Miktar", miktar) :
                new ObjectParameter("Miktar", typeof(int));
    
            var alisFiyatiParameter = alisFiyati.HasValue ?
                new ObjectParameter("AlisFiyati", alisFiyati) :
                new ObjectParameter("AlisFiyati", typeof(int));
    
            var satisFiyatiParameter = satisFiyati.HasValue ?
                new ObjectParameter("SatisFiyati", satisFiyati) :
                new ObjectParameter("SatisFiyati", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ekle", kategoriParameter, markaParameter, urunAdiParameter, miktarParameter, alisFiyatiParameter, satisFiyatiParameter);
        }
    
        public virtual int Ekle1(Nullable<int> tC, string adSoyad, Nullable<int> telefon, string urunAdi, Nullable<int> miktar, Nullable<int> satisFiyati, Nullable<int> toplamFiyat, Nullable<int> barkodNo)
        {
            var tCParameter = tC.HasValue ?
                new ObjectParameter("TC", tC) :
                new ObjectParameter("TC", typeof(int));
    
            var adSoyadParameter = adSoyad != null ?
                new ObjectParameter("AdSoyad", adSoyad) :
                new ObjectParameter("AdSoyad", typeof(string));
    
            var telefonParameter = telefon.HasValue ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(int));
    
            var urunAdiParameter = urunAdi != null ?
                new ObjectParameter("UrunAdi", urunAdi) :
                new ObjectParameter("UrunAdi", typeof(string));
    
            var miktarParameter = miktar.HasValue ?
                new ObjectParameter("Miktar", miktar) :
                new ObjectParameter("Miktar", typeof(int));
    
            var satisFiyatiParameter = satisFiyati.HasValue ?
                new ObjectParameter("SatisFiyati", satisFiyati) :
                new ObjectParameter("SatisFiyati", typeof(int));
    
            var toplamFiyatParameter = toplamFiyat.HasValue ?
                new ObjectParameter("ToplamFiyat", toplamFiyat) :
                new ObjectParameter("ToplamFiyat", typeof(int));
    
            var barkodNoParameter = barkodNo.HasValue ?
                new ObjectParameter("BarkodNo", barkodNo) :
                new ObjectParameter("BarkodNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ekle1", tCParameter, adSoyadParameter, telefonParameter, urunAdiParameter, miktarParameter, satisFiyatiParameter, toplamFiyatParameter, barkodNoParameter);
        }
    
        public virtual ObjectResult<Listele_Result> Listele()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Listele_Result>("Listele");
        }
    
        public virtual ObjectResult<Listele1_Result> Listele1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Listele1_Result>("Listele1");
        }
    
        public virtual int Sil(Nullable<int> barkodNo)
        {
            var barkodNoParameter = barkodNo.HasValue ?
                new ObjectParameter("BarkodNo", barkodNo) :
                new ObjectParameter("BarkodNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sil", barkodNoParameter);
        }
    
        public virtual int Sil1(Nullable<int> satisNo)
        {
            var satisNoParameter = satisNo.HasValue ?
                new ObjectParameter("SatisNo", satisNo) :
                new ObjectParameter("SatisNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sil1", satisNoParameter);
        }
    
        public virtual int Yenile(Nullable<int> barkodNo, string kategori, string marka, string urunAdi, Nullable<int> miktar, Nullable<int> alisFiyati, Nullable<int> satisFiyati)
        {
            var barkodNoParameter = barkodNo.HasValue ?
                new ObjectParameter("BarkodNo", barkodNo) :
                new ObjectParameter("BarkodNo", typeof(int));
    
            var kategoriParameter = kategori != null ?
                new ObjectParameter("Kategori", kategori) :
                new ObjectParameter("Kategori", typeof(string));
    
            var markaParameter = marka != null ?
                new ObjectParameter("Marka", marka) :
                new ObjectParameter("Marka", typeof(string));
    
            var urunAdiParameter = urunAdi != null ?
                new ObjectParameter("UrunAdi", urunAdi) :
                new ObjectParameter("UrunAdi", typeof(string));
    
            var miktarParameter = miktar.HasValue ?
                new ObjectParameter("Miktar", miktar) :
                new ObjectParameter("Miktar", typeof(int));
    
            var alisFiyatiParameter = alisFiyati.HasValue ?
                new ObjectParameter("AlisFiyati", alisFiyati) :
                new ObjectParameter("AlisFiyati", typeof(int));
    
            var satisFiyatiParameter = satisFiyati.HasValue ?
                new ObjectParameter("SatisFiyati", satisFiyati) :
                new ObjectParameter("SatisFiyati", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Yenile", barkodNoParameter, kategoriParameter, markaParameter, urunAdiParameter, miktarParameter, alisFiyatiParameter, satisFiyatiParameter);
        }
    
        public virtual int Yenile1(Nullable<int> satisNo, Nullable<int> tC, string adSoyad, Nullable<int> telefon, string urunAdi, Nullable<int> miktar, Nullable<int> satisFiyati, Nullable<int> toplamFiyat, Nullable<int> barkodNo)
        {
            var satisNoParameter = satisNo.HasValue ?
                new ObjectParameter("SatisNo", satisNo) :
                new ObjectParameter("SatisNo", typeof(int));
    
            var tCParameter = tC.HasValue ?
                new ObjectParameter("TC", tC) :
                new ObjectParameter("TC", typeof(int));
    
            var adSoyadParameter = adSoyad != null ?
                new ObjectParameter("AdSoyad", adSoyad) :
                new ObjectParameter("AdSoyad", typeof(string));
    
            var telefonParameter = telefon.HasValue ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(int));
    
            var urunAdiParameter = urunAdi != null ?
                new ObjectParameter("UrunAdi", urunAdi) :
                new ObjectParameter("UrunAdi", typeof(string));
    
            var miktarParameter = miktar.HasValue ?
                new ObjectParameter("Miktar", miktar) :
                new ObjectParameter("Miktar", typeof(int));
    
            var satisFiyatiParameter = satisFiyati.HasValue ?
                new ObjectParameter("SatisFiyati", satisFiyati) :
                new ObjectParameter("SatisFiyati", typeof(int));
    
            var toplamFiyatParameter = toplamFiyat.HasValue ?
                new ObjectParameter("ToplamFiyat", toplamFiyat) :
                new ObjectParameter("ToplamFiyat", typeof(int));
    
            var barkodNoParameter = barkodNo.HasValue ?
                new ObjectParameter("BarkodNo", barkodNo) :
                new ObjectParameter("BarkodNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Yenile1", satisNoParameter, tCParameter, adSoyadParameter, telefonParameter, urunAdiParameter, miktarParameter, satisFiyatiParameter, toplamFiyatParameter, barkodNoParameter);
        }
    
        public virtual ObjectResult<Giris_Result> Giris(string kadi, string sifre)
        {
            var kadiParameter = kadi != null ?
                new ObjectParameter("kadi", kadi) :
                new ObjectParameter("kadi", typeof(string));
    
            var sifreParameter = sifre != null ?
                new ObjectParameter("sifre", sifre) :
                new ObjectParameter("sifre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Giris_Result>("Giris", kadiParameter, sifreParameter);
        }
    }
}
